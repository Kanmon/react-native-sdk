name: Publish Frontend Native SDK to NPM

# Using CI to publish the SDK:
# 1. Update the package.json version to be accurate
# 2. Merge that PR.
# 3. In github, theres a "Releases" section. Create a new release with the name and a tag matching the version in the package.json file.
# 4. Save it. This will trigger the CI to publish the SDK to NPM. (aka this job)

on:
  push:
    branches:
      - GHA-release-workflow
    tags:
      - 'v*'

jobs:
  publish-frontend-sdk:
    name: Publish Frontend Native SDK to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # 4.3.0
        with:
          node-version: 18.20.7
          registry-url: 'https://registry.npmjs.org'

      - name: Use npm 9.9.1
        shell: bash
        run: npm install -g npm@9.9.1

      - name: Set Github tag
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # 4.2.2
        with:
          path: |
            node_modules
            .cache
          key: node-modulesc-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build App
        run: yarn prepare

      - name: Publish (pre-release)
        if: github.ref_type == 'branch'
        run: |
          git config user.name "${{ github.event.pusher.name }}"
          git config user.email "${{ github.event.pusher.email }}"
<<<<<<< Updated upstream
          yarn version --prerelease --preid next-${{ github.sha }} --no-git-tag-version
          yarn publish --access public --tag next
=======
          # Using NPM because Yarn Berry does not support preid
          npm version prerelease --preid next-${{ github.sha }} --no-git-tag-version
          npm publish --access public --tag next
>>>>>>> Stashed changes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        if: github.ref_type == 'tag'
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
